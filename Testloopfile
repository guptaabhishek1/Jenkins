pipeline {
    agent any

    stages {

        stage('Parallel Infra Stage') {
            steps {
                parallel(
                        "Build RMQ":
                        {
                            script {
                              def status = "FAILED"
                              while(status == "FAILED"){
                                try {
                                    buildRMQ()
                                    echo 'RMQ is UP like'
                                    status = "SUCCESS"
                                } catch (e) {
                                  echo "This is failed"
                                  Input_message = input message: 'Retry RMQ Build Proceed/Abort',
                                  
                                }
                              }
                            }
                        },
                        
                ) // End Parallel Infrastructure execution
            }
        }
        
 }
}


def buildRMQ() {
       build job: 'TestPipeline2', parameters:
       [
            string(name: 'Enviroment', value: "${env.Enviroment}"),
            string(name: 'Test', value: "${env.Test}"),
            string(name: 'userid', value: "${env.userid}")
       ]

}
