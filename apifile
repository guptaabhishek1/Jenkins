node{

  def ApiUrl = "https://my-json-server.typicode.com/user/repo/posts/1"
      
  stage('FetchApiFile') {
    echo 'Calling API to get event details contents'
    sh "curl ${ApiUrl} > /tmp/ApiUrl.txt"
    sh """
    cat >/tmp/ApiUrl1.txt <<EOF
MapName|us-east-1|us-west-1
Event|150000 per/min|
Agg Event|50000 per/min|
Mer Event|5000 per/min|
EOF
    """
    def Event = sh(script:'cat /tmp/ApiUrl1.txt |grep -w "Event" |head -1 |cut -d "|" -f2 |cut -d " " -f1 ', returnStdout: true).trim()
    
    if ( Event -gt "150000" ){
        currentBuild='SUCCESS'
    }else{
        currentBuild='FAILED'
    }
            
  }
  
  stage('Slack Status'){
    echo "${currentBuild}"
    checkout scm
    sh 'git rev-parse --verify HEAD > commit'
    def commitHash = readFile('commit').trim()
    
    def jobParametersMessage = "\n" + "\nIntegrationTestVersion: " + commitHash + "\nJOB_BASE_NAME: " + env.JOB_BASE_NAME + \
      "\nEnvironment: " + params.Environment

    println "$jobParametersMessage"
    
    if (currentBuild == 'SUCCESS') {
      message = "Woohoo, an Jenkins job ${env.JOB_BASE_NAME} just passed! Here are the parameters: $jobParametersMessage"
      color_code = "#00FF00"
      sh "sh slackStatus.sh \"$message\"  \"${color_code}\" \"gherkin\" \"peragrus\""
    } else {
      message = "Womp womp, an Jenkins Job ${env.JOB_BASE_NAME} just failed. here are the deets: $jobParametersMessage"
      color_code = "#FF0000"
      sh "sh slackStatus.sh \"$message\" \"${color_code}\" \"gherkin\" \"peragrus\""
      error("Failing Jenkins Job as Event was less than pass limit")
    }
  
  }
}
