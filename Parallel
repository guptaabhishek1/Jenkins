import hudson.model.User
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
pipeline 
{
  agent any
  stages {        
    stage('Serial') {
      when {
                expression { params.Enviroment == 'dev' }
      }
      steps{
        script{
          println "Serial Stage"
          //Tst = "${env.AZ}".split("-")[1].toLowerCase().capitalize()
          parameters(env.AZ)
          echo "${env.Tst}"
          //Tst1 = "${env.MultiAZ}".split("-")[1].toLowerCase().capitalize()
          //echo "${Tst1}"
          
          durationInSeconds = (params.HoursToRun.toInteger() * 3600).toString()
          halfDurationInSeconds = (durationInSeconds.toInteger().div(2)).toString()
          echo "${halfDurationInSeconds}"
          echo "${durationInSeconds}"
          //sleep(halfDurationInSeconds.toInteger())
        
        }
      }
    }
    stage('ParallelMultiAZ') {
      when {
            expression { params.Enviroment == 'qa' }
      }
      steps{
        parallel(
          "MultiAZ1": {
            script{
              println "Parallel Stage1"
              parameters(AZ)
            }
          },
          "MUltiAz2": {
            println "Parallel Stage2"
            sleep(30)
            parameters(env.MultiAZ)
            echo "${env.Tst}"
          },
      )
      }
    }
  }
}

def parameters(AZ){
  env.Tst = "${env.AZ}".split("-")[1].toLowerCase().capitalize()
  }
