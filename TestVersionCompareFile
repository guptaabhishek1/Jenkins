node{


  stage('FetchCsvFile') {

    echo 'Checking out the CSV file of load data hazelcast'
    checkout([$class                    : 'GitSCM', branches: [
              [name: '*/master']
      ], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [
              [url: 'https://github.com/guptaabhishek1/Jenkins.git']
      ]])

    // get contents of csv file to string
    csv_content = sh(script: "cat header.csv", returnStdout: true)
    sh "cp header.csv /tmp/header.csv" 
    }
    
 stage('FetchCsvFile') {

      sh """
      cat >/tmp/ApiUrl1.txt <<EOF
acctHistory-native-flat, 0
async-aggregates-acct, 49511086
async-aggregates-masscomp, 0
async-aggregates-merchant, 5965092
EVENT_DATA, 60549077
EVENT_POST_AUTH,0
ModelScores_useast1c-sliceb, 0
segment-data, 59712618
EOF
    """
    compare_csv_content = sh(script: "cat /tmp/ApiUrl1.txt ", returnStdout: true)
    def Event = sh(script:'sh compareValues.sh "/tmp/header.csv" "/tmp/ApiUrl1.txt"', returnStdout: true).trim()
    if (Event == 'SUCCESS'){
        currentBuild='SUCCESS'
    }else{
        currentBuild='FAILED'
    }
    
    echo "${currentBuild}"
    
  }
  stage('Slack Status'){
    echo "${currentBuild}"
    checkout scm
    sh 'git rev-parse --verify HEAD > commit'
    def commitHash = readFile('commit').trim()

    def jobParametersMessage = "\n" + "\nIntegrationTestVersion: " + commitHash + "\nJOB_BASE_NAME: " + env.JOB_BASE_NAME + \
      "\nEnvironment: " + params.Environment

    if (currentBuild == 'SUCCESS') {
      message = "Woohoo, an Jenkins job ${env.JOB_BASE_NAME} just passed! Here are the parameters: $jobParametersMessage"
      color_code = "#00FF00"
      sh "sh slackStatus.sh \"$message\"  \"${color_code}\" \"gherkin\" \"peragrus\""
    } else {
      message = "Womp womp, an Jenkins Job ${env.JOB_BASE_NAME} just failed. here are the deets: $jobParametersMessage"
      color_code = "#FF0000"
      sh "sh slackStatus.sh \"$message\" \"${color_code}\" \"gherkin\" \"peragrus\""
      error("Failing Jenkins Job as Event was less than pass limit")
    }

  }
  
}

    
